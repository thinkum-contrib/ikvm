<?xml version="1.0"?>
<project name="IKVM.OpenJDK.ClassLibrary.dll" default="IKVM.OpenJDK.ClassLibrary.dll">
    <property name="pathsep" value=":" />
    <property overwrite="false" name="signoption" value="" />
    <property name="Classpath.dir" value="${project::get-base-directory()}/../../classpath-0.95" />
    <property name="OpenJDK.dir" value="${project::get-base-directory()}/../../openjdk-b13" />
    <if test="${platform::is-win32()}">
        <property name="pathsep" value=";" />
    </if>

    <target name="classes">
        <delete>
		<fileset basedir="${Classpath.dir}">
			<include name="**.class"/>
		</fileset>
	</delete>
	<delete>
		<fileset basedir="../classpath">
			<include name="**.class"/>
		</fileset>
	</delete>
        <delete>
		<fileset basedir="${OpenJDK.dir}">
			<include name="j2se/src/**.class"/>
			<include name="control/build/linux-i586/gensrc/**.class"/>
		</fileset>
	</delete>
	<delete>
		<fileset basedir=".">
			<include name="**.class"/>
		</fileset>
	</delete>
        <exec program="javac" commandline="-J-Xmx1024M -g -nowarn -bootclasspath ../classpath/mscorlib.jar${pathsep}../classpath/System.jar @allsources.lst" useruntimeengine="false" />
    </target>

    <target name="vfs">
      <!-- This file is generated here, but it is added as a resource to IKVM.Runtime.dll, because Ref.Emit on .NET 1.1 doesn't support adding a raw resource. -->
      <zip zipfile="vfs.zip">
          <fileset basedir="${OpenJDK.dir}/control/build/linux-i586/j2re-image">
               <include name="lib/zi/**/*" />
               <include name="lib/logging.properties" />
               <include name="lib/security/java.policy" />
          </fileset>
          <fileset basedir=".">
               <include name="lib/**/*" />
          </fileset>
      </zip>
    </target>

    <target name="IKVM.OpenJDK.ClassLibrary.dll" depends="classes vfs">
        <exec program="${project::get-base-directory()}/../bin/ikvmc.exe" useruntimeengine="true">
          <arg value="-version:0.36.0.0" />
          <arg value="${signoption}" />
          <arg value="-compressresources" />
          <arg value="-opt:fields" />
          <arg value="-strictfinalfieldsemantics" />
          <arg value="-out:IKVM.OpenJDK.ClassLibrary.dll" />
          <arg value="-remap:map.xml" />
          <arg value="-exclude:exclude.lst" />
          <arg value="-target:library" />
          <arg value="-recurse:./*.class" />
          <arg value="-recurse:../classpath/*.class" />
          <arg value="-recurse:${OpenJDK.dir}/j2se/src/*.class" />
          <arg value="-recurse:${OpenJDK.dir}/control/build/linux-i586/gensrc/*.class" />
          <arg value="-recurse:${OpenJDK.dir}/control/build/linux-i586/classes/*_Stub.class" />
          <arg value="-recurse:${OpenJDK.dir}/control/build/linux-i586/classes/*_Tie.class" />
          <arg value="-recurse:${OpenJDK.dir}/control/build/linux-i586/classes/*_Skel.class" />
          <arg value="-recurse:${Classpath.dir}/*.class" />
          <arg value="-r:mscorlib" />
          <arg value="-r:${framework::get-assembly-directory(framework::get-target-framework())}/System.dll" />
          <arg value="-resource:META-INF/MANIFEST.MF=MANIFEST.MF" />
          <arg value="${OpenJDK.dir}/control/build/linux-i586/j2re-image/lib/resources.jar" />
        </exec>
        <copy file="IKVM.OpenJDK.ClassLibrary.dll" tofile="../bin/IKVM.OpenJDK.ClassLibrary.dll.new" />
        <if test="${platform::is-win32()}">
          <exec program="peverify" commandline="../bin/IKVM.OpenJDK.ClassLibrary.dll.new" />
        </if>
        <copy file="IKVM.OpenJDK.ClassLibrary.dll" todir="../bin" />
	<delete file="../bin/IKVM.OpenJDK.ClassLibrary.dll.new" />
    </target>

</project>
